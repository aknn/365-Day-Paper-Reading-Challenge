* Duration
From 26 July 2020 to 
* Content
1. [[#day-31-dm][Day 31: Hierarchical Topic Mining via Joint Spherical Tree and Text Embedding]]
2. [[#day-32-se][Day 32: Simulee: Detecting CUDA Synchronization Bugs via Memory-Access Modeling]]
3. [[#day-33-se][Day 33: Identifying experts in software libraries and frameworks among GitHub users]]

* Day 31: DM
- *Title*: Hierarchical Topic Mining via Joint Spherical Tree and Text Embedding
- *Year*: 2020
- *Proc*: KDD

The following content is referred from [1]
** Keywords
Topic Mining; Topic Hierarchy; Text Embedding; Tree Embedding
** Problem
They propose a new task, *Hierarchical Topic Mining*, which takes only a topic hierarchy described by category names as user guidance, and aims to retrieve a set of coherent and representative terms under each category to help users comprehend his/her interested topics.

** Method
Hierarchical Topic Mining is weakly-supervised as it requires the user to provide the names of the hierarchy categories which serve as the minimal supervision and focuses on retrieving representative terms only for the provided categories.

** Result
The proposed model, named JoSH, mines a high-quality set of hierarchical topics with high efficiency and benefits weakly-supervised hierarchical text classification tasks.

** Future work
- One can extend JoSH to not only focus on a user-given category structure, but also be able to discover other latent topics from a text corpus, probably by relaxing the assumption that a document is generated from one ofthe given topics or collaborating with other taxonomy construction algorithms.

- Embedding tree or graph structures along with textual data in the spherical space for mining structured knowledge from text corpora.

* Day 32: SE
- *Title*: Simulee: Detecting CUDA Synchronization Bugs via Memory-Access Modeling
- *Year*: 2020
- *Proc*: ICSE

The following content is referred from [2]
** Problem
How to effectively and efficiently detect CUDA synchronization bugs remains a challenging open problem.

** Method
They pro-pose the first lightweight CUDA synchronization bug detection framework, namely Simulee, to model CUDA program execution by interpreting the corresponding LLVM bytecode and collecting the memory-access information for automatically detecting general CUDA synchronization bugs.

** Result
Simulee can detect 21 out of the 24 manually identified bugs in our preliminary study and also 24 previously unknown bugs among all projects, 10 of which have already been confirmed by the developers.

The results suggest that Simulee is able to detect most of the manually identified synchronization bugs in the benchmark.

* Day 33: SE
- *Title*: Identifying experts in software libraries and frameworks among GitHub users

- *Year*: 2019
- *Proc*: MSR

The following content is referred from [3]
** Problem
We still lack techniques to assess developers expertise in widely popular libraries and frameworks.

** Method
They evaluate the performance of unsupervised (based on clustering) and supervised machine learning classifiers (Random Forest and SVM) to identify experts in three popular JavaScript libraries: facebook/react, mongodb/node-mongodb, and socketio/socket.io.

** Result
First, they found that standard machine learning classifiers (e.g., Random Forest and SVM) do not have a good performance in this problem, at least when they are trained with all developers from a sample of GitHub users. The main reason is that not all experts have a strong presence on GitHub. By contrast, they used clustering techniques to identify experts with high activity on GitHub projects that depend on particular libraries and frameworks. Particularly, they found clusters with 74% (REACT), 65% (NODE-MONGODB), and 75% (SOCKET.IO) of experts.

** Future work
(1) investigate other target libraries and frameworks; 
(2) investigate the use of features from other platforms, such as Stack Overflow and TopCoder;
(3) investigate the accuracy of the proposed method with other developers, including developers of less popular projects

* Reference
1. Meng, Y., Zhang, Y., Huang, J., Zhang, Y., Zhang, C., & Han, J. (2020). Hierarchical Topic Mining via Joint Spherical Tree and Text Embedding. arXiv preprint arXiv:2007.09536.

2. APA is unavailable now

3. Montandon, J. E., Silva, L. L., & Valente, M. T. (2019, May). Identifying experts in software libraries and frameworks among GitHub users. In 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR) (pp. 276-287). IEEE.
